// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using YSecOps.Events.EfCore.Contexts;
using YSecOps.Events.EfCore.Models;

#nullable disable

namespace YSecOps.Events.EfCore.Contexts.Configurations
{
    public partial class EventConfiguration : IEntityTypeConfiguration<Event>
    {
        public void Configure(EntityTypeBuilder<Event> entity)
        {
            entity.HasKey(e => e.Id)
                .HasName("PK_Events_Id")
                .IsClustered(false);

            entity.ToTable("Events", "Diagnostics");

            entity.HasIndex(e => e.AggregateId, "IX_Events_AggregateId");

            entity.HasIndex(e => new { e.Major_Version, e.Minor_Version }, "IX_Events_MajorMinor");

            entity.Property(e => e.Id).HasDefaultValueSql("(newsequentialid())");

            entity.Property(e => e.Aggregate).HasMaxLength(250);

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.Property(e => e.Major_Version).HasDefaultValueSql("((1))");

            entity.Property(e => e.Minor_Version).HasDefaultValueSql("((1))");

            entity.Property(e => e.Name).HasMaxLength(250);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Event> entity);
    }
}
