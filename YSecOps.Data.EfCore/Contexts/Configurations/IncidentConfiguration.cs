// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using YSecOps.Data.EfCore.Contexts;
using YSecOps.Data.EfCore.Models;

namespace YSecOps.Data.EfCore.Contexts.Configurations
{
    public partial class IncidentConfiguration : IEntityTypeConfiguration<Incident>
    {
        public void Configure(EntityTypeBuilder<Incident> entity)
        {
            entity.HasIndex(e => e.OpsManager_Id, "IX_Incidents_OpsManagerId");

            entity.HasIndex(e => e.RecordedBy_Id, "IX_Incidents_RecordedBy");

            entity.HasIndex(e => new { e.RecordedOn, e.Severity }, "IX_Incidents_Severity");

            entity.Property(e => e.Id).HasDefaultValueSql("(newsequentialid())");

            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(1000);

            entity.Property(e => e.FollowUpResponse).HasMaxLength(1000);

            entity.Property(e => e.Injuries).HasMaxLength(1000);

            entity.Property(e => e.Keywords)
                .IsRequired()
                .HasMaxLength(500);

            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(1000);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Incident> entity);
    }
}
