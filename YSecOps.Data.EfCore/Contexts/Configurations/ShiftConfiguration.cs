// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using YSecOps.Data.EfCore.Contexts;
using YSecOps.Data.EfCore.Models;

namespace YSecOps.Data.EfCore.Contexts.Configurations
{
    public partial class ShiftConfiguration : IEntityTypeConfiguration<Shift>
    {
        public void Configure(EntityTypeBuilder<Shift> entity)
        {
            entity.ToTable(tb => tb.IsTemporal(ttb =>
    {
        ttb.UseHistoryTable("Shifts_History", "dbo");
        ttb
            .HasPeriodStart("SysStart")
            .HasColumnName("SysStart");
        ttb
            .HasPeriodEnd("SysEnd")
            .HasColumnName("SysEnd");
    }
));

            entity.HasIndex(e => new { e.CheckedInAt, e.CheckedOutAt }, "IX_Shifts_CheckedInAt_CheckedOutAt");

            entity.HasIndex(e => e.CurrentLocationId, "IX_Shifts_CurrentLocationId");

            entity.HasIndex(e => e.StaffId, "IX_Shifts_StaffId");

            entity.HasIndex(e => new { e.StartAt, e.EndAt }, "IX_Shifts_StartAt_EndAt");

            entity.HasIndex(e => e.StartingLocationId, "IX_Shifts_StartingLocationId");

            entity.Property(e => e.Id).HasDefaultValueSql("(newsequentialid())");

            entity.Property(e => e.Notes).HasMaxLength(500);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Shift> entity);
    }
}
