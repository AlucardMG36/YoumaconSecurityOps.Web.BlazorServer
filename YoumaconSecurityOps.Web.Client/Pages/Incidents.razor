@page "/incidents"
<ErrorBoundary @ref="@_errorBoundary">
    <ChildContent>
        <Jumbotron Background="Background.Dark" Margin="Margin.Is2.FromTop.OnDesktop.Is1.FromTop.OnMobile" Border="Border.Dark.OnAll.Is1.Rounded" Shadow="Shadow.Default">
            <JumbotronTitle TextColor="TextColor.Light">List of Incidents</JumbotronTitle>
            <Divider />
            <JumbotronSubtitle TextColor="TextColor.Info">Incidents in Teal are resolved</JumbotronSubtitle>
        </Jumbotron>
        <Divider />
        <DataGrid @ref="@_dataGrid"
                  TItem="IncidentReader"
                  ReadData="@OnReadData"
                  Data="@_gridDisplay"
                  TotalItems="@_totalIncidents"
                  Editable
                  CommandMode="DataGridCommandMode.Commands"
                  Responsive
                  Sortable
                  Hoverable
                  Striped
                  EditMode="DataGridEditMode.Popup"
                  FixedHeader
                  FixedHeaderDataGridHeight="400px"
                  @bind-SelectedRow="@_selectedIncident"
                  RowStyling="@OnRowStyling"
                  RowInserting="@OnRowInserting"
                  Virtualize
                  DetailRowTrigger="@(context => context.Item.Id == _selectedIncident?.Id)">
            <PopupTitleTemplate>
                @if (context.EditState == DataGridEditState.Edit)
                {
                    @($"{context.LocalizationString} Incident: {context.Item.Title}")
                }
                else
                {
                    @($"{context.LocalizationString} Incident")
                }
            </PopupTitleTemplate>
            <EmptyTemplate>
                No Incidents Recorded...
            </EmptyTemplate>
            <LoadingTemplate>
                <Span>
                    <SpinKit Type="SpinKitType.Grid"></SpinKit>
                </Span>
            </LoadingTemplate>
            <DataGridAggregates>
                <DataGridAggregate TItem="IncidentReader" Field="@nameof(IncidentReader.Id)" Aggregate="DataGridAggregateType.Count">
                    <DisplayTemplate>
                        @($"Total Incidents: {context.Value}")
                    </DisplayTemplate>
                </DataGridAggregate>
                <DataGridAggregate TItem="IncidentReader" Field="@nameof(IncidentReader.ResolvedAt)" AggregationFunction="DataGridAggregate<IncidentReader>.Count">
                    <DisplayTemplate>
                        @($"Total Resolved Incidents: {context.Value}")
                    </DisplayTemplate>
                </DataGridAggregate>
            </DataGridAggregates>
            <DataGridColumns>
                <DataGridCommandColumn TItem="IncidentReader">
                    <NewCommandTemplate>
                        <Blazorise.Bootstrap5.Button Color="Color.Success" Border="Border.Dark.OnAll.Is1.Rounded" Shadow="Shadow.Default" Clicked="@context.Clicked">@context.LocalizationString</Blazorise.Bootstrap5.Button>
                    </NewCommandTemplate>
                    <SaveCommandTemplate>
                        <Blazorise.Bootstrap5.Button Color="Color.Primary" Border="Border.Dark.OnAll.Is1.Rounded" Shadow="Shadow.Default" Clicked="@context.Clicked">@context.LocalizationString</Blazorise.Bootstrap5.Button>
                    </SaveCommandTemplate>
                    <CancelCommandTemplate>
                        <Blazorise.Bootstrap5.Button Color="Color.Secondary" Border="Border.Dark.OnAll.Is1.Rounded" Shadow="Shadow.Default" Clicked="@context.Clicked">@context.LocalizationString</Blazorise.Bootstrap5.Button>
                    </CancelCommandTemplate>
                    <EditCommandTemplate>
                        <Blazorise.Bootstrap5.Button Color="Color.Primary" Margin="Margin.Is2.OnX.OnDesktop.Is1.OnX.OnMobile" Padding="Padding.Is1.OnAll" Border="Border.Dark.OnAll.Is1.Rounded" Shadow="Shadow.Default" Clicked="@context.Clicked">@context.LocalizationString</Blazorise.Bootstrap5.Button>
                    </EditCommandTemplate>
                </DataGridCommandColumn>
                <DataGridColumn TItem="IncidentReader" Field="@nameof(IncidentReader.Title)" Caption="Title" Editable="true" />
                <DataGridColumn TItem="IncidentReader" Field="Location.Name" Caption="Location Occurred At" Sortable="true" Editable="true">
                    <DisplayTemplate>
                        @(_locations.FirstOrDefault(l => l.Id == context.Location?.Id)?.Name ?? String.Empty)
                    </DisplayTemplate>
                    <EditTemplate>
                        <SelectList TItem="@LocationReader"
                                    TValue="Guid"
                                    Data="@_locations"
                                    TextField="@((item)=>item.Name)"
                                    ValueField="@((item)=>item.Id)"
                                    SelectedValue="@_selectedOccurrenceLocation"
                                    SelectedValueChanged="@OnSelectedLocationChanged"
                                    DefaultItemText="Choose where the incident took place" />
                    </EditTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="IncidentReader" Field="@nameof(IncidentReader.Description)" Caption="Description" Editable="true" />
                <DataGridDateColumn TItem="IncidentReader" Field="@nameof(IncidentReader.RecordedOn)" Caption="Date Recorded" Editable="true">
                    <DisplayTemplate>
                        @context.RecordedOn
                    </DisplayTemplate>
                    <EditTemplate>
                        <DatePicker TValue="DateTime?" InputMode="DateInputMode.DateTime" Date="@_selectedRecordedDate" DateChanged="@OnRecordedDateChanged" Placeholder="@DateTime.Now.ToString(CultureInfo.CurrentCulture)">
                        </DatePicker>
                    </EditTemplate>
                </DataGridDateColumn>
                <DataGridColumn TItem="IncidentReader" Field="ReportedBy.Contact.PreferredName" Caption="Reporting Staff Member" Editable="true">
                    <DisplayTemplate>
                        @(_staffMembers.FirstOrDefault(st => st.Id == context.ReportedBy?.Id)?.Contact.PreferredName ?? String.Empty)
                    </DisplayTemplate>
                    <EditTemplate>
                        <SelectList TItem="@StaffReader"
                                    TValue="Guid"
                                    Data="@_staffMembers"
                                    TextField="@((item)=>$"{item.Contact.LastName}, {item.Contact.PreferredName}")"
                                    ValueField="@((item)=>item.Id)"
                                    SelectedValue="@_selectedReportingStaffMember"
                                    SelectedValueChanged="@OnReportingStaffMemberChanged"
                                    DefaultItemText="Choose a Staff Member" />
                    </EditTemplate>
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </ChildContent>
    <ErrorContent>
        <ErrorComponent ApiError="@_apiResponse" />
    </ErrorContent>
</ErrorBoundary>
