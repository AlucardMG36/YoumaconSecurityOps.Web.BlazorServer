@page "/radios"
<PageTitle>YSec Radio Schedule</PageTitle>
<Jumbotron Background="Background.Dark"
           TextColor="TextColor.Light"
           Margin="Margin.Is2.OnY"
           Border="Border.Is3.OnAll.Rounded.Light"
           Shadow="Shadow.Default">
    <JumbotronTitle Size="JumbotronTitleSize.Is3">
        Current Radio Status and Checkouts
    </JumbotronTitle>
    <JumbotronSubtitle Flex="Flex.Column.JustifyContent.Center.JustifyContent.Around"
                       TextTransform="TextTransform.Capitalize"
                       TextWeight="TextWeight.Light">
        <Text TextColor="TextColor.Danger" Italic>Current Radios Checked-Out: @_checkedOutRadios</Text>
        <Text TextColor="TextColor.Warning" Italic>Current Radios Charging: @_chargingRadios</Text>
    </JumbotronSubtitle>
</Jumbotron>

<DataGrid TItem="RadioSchedule"
          Data="_radioScheduleList"
          ReadData="OnReadData"
          Editable
          Striped
          ShowPager
          Narrow
          Responsive
          Resizable
          ResizeMode="TableResizeMode.Columns"
          UseInternalEditing="false"
          Sortable
          Filterable
          Hoverable
          Bordered
          Class="table-dark border-2 border-light rounded-2 my-2 shadow"
          CommandMode="DataGridCommandMode.Commands"
          HeaderThemeContrast="ThemeContrast.Dark"
          @bind-SelectedRow="@_selectedRadio"
          DetailRowTrigger="radio => radio.Item.Id == _selectedRadio?.Id">
    <EmptyTemplate>
        <Icon Name="IconName.InfoCircle" TextColor="TextColor.Info" Margin="Margin.Is2.FromEnd" />
        <Paragraph Italic TextColor="TextColor.Danger" TextWeight="TextWeight.Bold">
            No Radios Could Be Found
        </Paragraph>
    </EmptyTemplate>
    <LoadingTemplate>
        <Span>
            <SpinKit Centered Color="#ff007f" Type="SpinKitType.Plane" />
            Loading Radios...
        </Span>
    </LoadingTemplate>
    <DataGridColumns>
        <DataGridCommandColumn Width="170px">
            <NewCommandTemplate>
                <Button Type="ButtonType.Link" Color="Color.Success" Border="Border.Is2.Light.OnAll.Rounded" Shadow="Shadow.Default" To="/">@context.LocalizationString</Button>
            </NewCommandTemplate>
            <ClearFilterCommandTemplate>
                <Button Color="Color.Warning" Border="Border.Is2.Light.OnAll.Rounded" Shadow="Shadow.Default" Clicked="@context.Clicked">@context.LocalizationString</Button>
            </ClearFilterCommandTemplate>
        </DataGridCommandColumn>
        <DataGridColumn HeaderCellClass="bg-dark text-light" Field="@nameof(RadioSchedule.RadioNumber)" Caption="#">
            <DisplayTemplate>
                @context.RadioNumber
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn HeaderCellClass="bg-dark text-light" Field="@nameof(RadioSchedule.LastStaffToHave_Id)" Caption="Last Staff Member">
            <DisplayTemplate>
                @GetMemberName(context)
            </DisplayTemplate>
        </DataGridColumn>
    </DataGridColumns>
    <DetailRowTemplate>
        @{
            var radioInformation = context as RadioSchedule;

            <DataGrid TItem="RadioSchedule"
                  Data="new []{radioInformation}"
                  Sortable="false"
                  ShowCaptions="true"
                  Narrow
                  RowSelectable="(x) => false">
                <DataGridCommandColumn TItem="RadioSchedule" />
                <DataGridDateColumn HeaderCellClass="bg-dark text-light text-start" TItem="RadioSchedule" Field="@nameof(RadioSchedule.CheckedInAt)" Caption="Checked Out" />
                <DataGridDateColumn HeaderCellClass="bg-dark text-light text-start" TItem="RadioSchedule" Field="@nameof(RadioSchedule.CheckedOutAt)" Caption="Returned" />
                <DataGridCheckColumn HeaderCellClass="bg-dark text-light text-start" TItem="RadioSchedule" Field="@nameof(RadioSchedule.IsCharging)" Caption="Charging?">
                    <DisplayTemplate Context="detailContext">
                        <Card Background="Background.Transparent"
                              Shadow="Shadow.None"
                              Margin="Margin.Is3.OnY"
                              Border="Border.Is0.OnAll.RoundedZero">
                            <CardBody TextColor="TextColor.Light" Flex="Flex.Row.JustifyContent.Start">
                                <Switch Checked="@detailContext.IsCharging" Color="Color.Success" ReadOnly />
                                @(detailContext.IsCharging ?? false ? "Yes" : "No")
                            </CardBody>
                        </Card>
                    </DisplayTemplate>
                </DataGridCheckColumn>
            </DataGrid>
        }
    </DetailRowTemplate>
</DataGrid>